version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    # Specify service dependencies here is necessary
    # CircleCI maintains a library of pre-built images

    working_directory: ~/scala-foo
    environment:
      SBT_VERSION: 1.4.7

    steps:
      - run: echo 'export ARTIFACT_BUILD=$CIRCLE_PROJECT_REPONAME-$CIRCLE_BUILD_NUM.zip' >> $BASH_ENV
#      - run:
#          name: Get sbt binary
#          command: |
#                    apt update && apt install -y curl
#                    curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
#                    dpkg -i sbt-$SBT_VERSION.deb
#                    rm sbt-$SBT_VERSION.deb
#                    apt-get update
#                    apt-get install -y python-pip git
#                    pip install awscli
#                    apt-get clean && apt-get autoclean
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
#          key: sbt-cache
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
              # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Compile Test
          command: cat /dev/null | sbt test:compile
      - run:
          name: Compile scala-foo dist package
          command: cat /dev/null | sbt clean update dist
      - store_artifacts: # for display in Artifacts:  https://circleci.com/docs/2.0/artifacts/
          path: target/universal/foo-0.1.0-SNAPSHOT.zip
          destination: samplescala
      - save_cache:
#          key: sbt-cache
          key: v1-dependencies--{{ checksum "build.sbt" }}
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
            # run tests!
#      - run:
#          name: Run Test
#          command: cat /dev/null | sbt test:test
#      - deploy:
#          command: |
#            mv target/universal/samplescala.zip $CIRCLE_ARTIFACTS/$ARTIFACT_BUILD
#            aws s3 cp $CIRCLE_ARTIFACTS/$ARTIFACT_BUILD s3://samplescala.blogs/builds/ --metadata {\"git_sha1\":\"$CIRCLE_SHA1\"}